// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  email     String @unique
  name      String
  username  String
  password  String
  userImage String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Refresh Token
  refreshToken RefreshToken[]

  // Buzz
  BuzzPost BuzzPost[]
}

model RefreshToken {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  token String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String @db.ObjectId

  // Relationship User - RefreshToken 
  user User @relation(fields: [userId], references: [id])
}

model BuzzPost {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  text String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Author
  author   User   @relation(fields: [authorId], references: [id])
  authorId String @db.ObjectId

  // Reply to another buzz post
  replyToId String?    @db.ObjectId
  replyTo   BuzzPost?  @relation("replies", fields: [replyToId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  // Same way other buzz post can reply to this buzz post
  replies   BuzzPost[] @relation("replies")

  // Todo: Media post
}
